# Пример с классическим присваиванием переменных
a = 3
b = 6

print("a =", a)  # Выводим значение переменной a
print("b =", b)  # Выводим значение переменной b

# Присвоим значение a к b и наоборот
a = b  # Теперь a равно b (a = 6)
b = a  # Теперь b равно a, но a уже равно 6, поэтому b = 6

print("Теперь a =", a)  # Выводим обновленное значение a
print("Теперь b =", b)  # Выводим обновленное значение b

# Здесь мы видим, что переменная b так и осталась равна 6.
# Это произошло потому, что при классическом присваивании переменные изменяются последовательно.
# После выполнения первой строки (a = b), a стало равно 6.
# Затем, при выполнении следующей строки (b = a), переменная b просто принимает значение переменной a,
# которое на тот момент уже равно 6.

print("-" * 30)  # Выводим разделитель для наглядности

# Пример с множественным присваиванием
a, b = 3, 6  # Одновременное присваивание значений переменным a и b
print("a =", a)  # Выводим значение переменной a
print("b =", b)  # Выводим значение переменной b

a, b = b, a  # Меняем значения переменных местами (a становится равно b, а b становится равно a)

print("Теперь a =", a)  # Выводим обновленное значение a
print("Теперь b =", b)  # Выводим обновленное значение b

# В этом случае, при использовании множественного присваивания, значения переменных меняются местами
# одновременно, что позволяет корректно обменять значения переменных без промежуточного шага.
